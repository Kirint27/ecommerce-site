{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport * as i0 from \"@angular/core\";\nexport let WishlistService = /*#__PURE__*/(() => {\n  class WishlistService {\n    constructor(firestore) {\n      this.firestore = firestore;\n      this.wishlistProducts = new BehaviorSubject([]); // Holds wishlist products\n    }\n    addToWishlist(product) {\n      const wishlistProducts = this.wishlistProducts.value; // Current wishlist products\n      const index = wishlistProducts.findIndex(p => p.id === product.id); // Check if product is already in wishlist\n      if (index === -1) {\n        // If product is not in wishlist\n        wishlistProducts.push(product);\n        this.wishlistProducts.next(wishlistProducts);\n        this.updateWishlistInDb();\n      } else {\n        console.log(\"Product is already in the wishlist\");\n      }\n    }\n    // Method to update the wishlist in Firestore\n    updateWishlistInDb() {\n      const wishlistItems = this.wishlistProducts.value; // Current value of wishlistProducts\n      this.firestore.collection(\"WishlistItems\").doc(\"wishlist\").set({\n        items: wishlistItems\n      }, {\n        merge: true\n      } // Merge to avoid overwriting other fields\n      ).then(() => {\n        console.log(\"Wishlist updated in Firestore successfully.\");\n      }).catch(error => {\n        console.error(\"Error updating wishlist in Firestore:\", error);\n      });\n    }\n    getWishlistItems() {\n      return this.firestore.collection(\"WishlistItems\").doc(\"wishlist\").valueChanges();\n    }\n    removeFromWishlist(id) {\n      const wishlistItems = this.wishlistProducts.value;\n      const index = wishlistItems.findIndex(p => p.id === id);\n      if (index !== -1) {\n        wishlistItems.splice(index, 1);\n        this.wishlistProducts.next(wishlistItems);\n        this.updateWishlistInDb();\n      }\n    }\n    static {\n      this.ɵfac = function WishlistService_Factory(__ngFactoryType__) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: WishlistService,\n        factory: WishlistService.ɵfac,\n        providedIn: \"root\"\n      });\n    }\n  }\n  return WishlistService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}